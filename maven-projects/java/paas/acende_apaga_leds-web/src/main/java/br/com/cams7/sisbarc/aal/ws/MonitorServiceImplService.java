package br.com.cams7.sisbarc.aal.ws;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import br.com.cams7.sisbarc.aal.service.MonitorService;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.8 Generated source
 * version: 2.2
 * 
 */
@WebServiceClient(name = MonitorServiceImplService.WEBSERVICECLIENT_NAME, targetNamespace = MonitorService.WEBSERVICE_TARGETNAMESPACE, wsdlLocation = MonitorServiceImplService.WEBSERVICECLIENT_WSDLLOCATION)
public class MonitorServiceImplService extends Service {

	public static final String WEBSERVICEIMPL_NAME = MonitorService.WEBSERVICE_NAME
			+ "Impl";

	public static final String WEBSERVICECLIENT_NAME = WEBSERVICEIMPL_NAME
			+ "Service";
	public static final String WEBSERVICECLIENT_WSDLLOCATION = "http://200.141.84.2:8080/acende_apaga_leds/monitor?wsdl";

	private final static URL MONITORSERVICEIMPLSERVICE_WSDL_LOCATION;
	private final static WebServiceException MONITORSERVICEIMPLSERVICE_EXCEPTION;
	private final static QName MONITORSERVICEIMPLSERVICE_QNAME = new QName(
			MonitorService.WEBSERVICE_TARGETNAMESPACE,
			MonitorServiceImplService.WEBSERVICECLIENT_NAME);

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL(WEBSERVICECLIENT_WSDLLOCATION);
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		MONITORSERVICEIMPLSERVICE_WSDL_LOCATION = url;
		MONITORSERVICEIMPLSERVICE_EXCEPTION = e;
	}

	public MonitorServiceImplService() {
		super(__getWsdlLocation(), MONITORSERVICEIMPLSERVICE_QNAME);
	}

	public MonitorServiceImplService(WebServiceFeature... features) {
		super(__getWsdlLocation(), MONITORSERVICEIMPLSERVICE_QNAME, features);
	}

	public MonitorServiceImplService(URL wsdlLocation) {
		super(wsdlLocation, MONITORSERVICEIMPLSERVICE_QNAME);
	}

	public MonitorServiceImplService(URL wsdlLocation,
			WebServiceFeature... features) {
		super(wsdlLocation, MONITORSERVICEIMPLSERVICE_QNAME, features);
	}

	public MonitorServiceImplService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public MonitorServiceImplService(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns MonitorService
	 */
	@WebEndpoint(name = WEBSERVICEIMPL_NAME + "Port")
	public MonitorService getMonitorServiceImplPort() {
		return super.getPort(new QName(
				MonitorService.WEBSERVICE_TARGETNAMESPACE, WEBSERVICEIMPL_NAME
						+ "Port"), MonitorService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns MonitorService
	 */
	@WebEndpoint(name = WEBSERVICEIMPL_NAME + "Port")
	public MonitorService getMonitorServiceImplPort(
			WebServiceFeature... features) {
		return super.getPort(new QName(
				MonitorService.WEBSERVICE_TARGETNAMESPACE, WEBSERVICEIMPL_NAME
						+ "Port"), MonitorService.class, features);
	}

	private static URL __getWsdlLocation() {
		if (MONITORSERVICEIMPLSERVICE_EXCEPTION != null) {
			throw MONITORSERVICEIMPLSERVICE_EXCEPTION;
		}
		return MONITORSERVICEIMPLSERVICE_WSDL_LOCATION;
	}

}
